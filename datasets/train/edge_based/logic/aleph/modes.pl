:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:- style_check(-discontiguous).
:- aleph_set(clauselength,12).
:- aleph_set(i,6).
:- aleph_set(verbosity,1).
:- aleph_set(minpos,5).
:- aleph_set(nodes,30000).
:- modeh(1,train(+id)).
:- modeb(*,has_car(+id,-node_id,-node_id)).
:- modeb(*,has_load(+id,-node_id,-node_id)).
:- modeb(*,edge(+id,-node_id,-object)).
:- modeb(*,instance(+id,-node_id)).
:- modeb(*,train(+object)).
:- modeb(*,car(+object)).
:- modeb(*,load(+object)).
:- modeb(*,short(+object)).
:- modeb(*,long(+object)).
:- modeb(*,two_wheels(+object)).
:- modeb(*,three_wheels(+object)).
:- modeb(*,roof_open(+object)).
:- modeb(*,roof_closed(+object)).
:- modeb(*,zero_load(+object)).
:- modeb(*,one_load(+object)).
:- modeb(*,two_load(+object)).
:- modeb(*,three_load(+object)).
:- modeb(*,circle(+object)).
:- modeb(*,triangle(+object)).
:- determination(train/1,has_car/3).
:- determination(train/1,has_load/3).
:- determination(train/1,edge/3).
:- determination(train/1,instance/2).
:- determination(train/1,train/1).
:- determination(train/1,car/1).
:- determination(train/1,load/1).
:- determination(train/1,short/1).
:- determination(train/1,long/1).
:- determination(train/1,two_wheels/1).
:- determination(train/1,three_wheels/1).
:- determination(train/1,roof_open/1).
:- determination(train/1,roof_closed/1).
:- determination(train/1,zero_load/1).
:- determination(train/1,one_load/1).
:- determination(train/1,two_load/1).
:- determination(train/1,three_load/1).
:- determination(train/1,circle/1).
:- determination(train/1,triangle/1).
